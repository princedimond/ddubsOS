# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config
, lib
, modulesPath
, ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "rtsx_usb_sdmmc" ];
    initrd.kernelModules = [ ];
    kernelModules = [ "kvm-intel" ];
    extraModulePackages = [ ];
    # Reduce swapping
    kernel.sysctl."vm.swappiness" = "10";
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/3fc66458-b0e1-4a29-ae90-ddfcc864cdfa";
      fsType = "xfs";
    };
    "/bin" = {
      device = "/usr/bin";
      fsType = "none";
      options = [ "bind" ];
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/AA20-B868";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };
    "/mnt/nas" = {
      device = "192.168.40.11:/volume1/DiskStation54TB";
      fsType = "nfs";
      options = [ "rw" "bg" "tcp" "_netdev" ];
    };
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/d5d79577-7a52-4fa0-a754-3ecac1d01c3c"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  # For home network edns was causing issues.

  #  environment.etc."resolv.conf".text = ''
  #  domain homelan.net
  #  search homelan.net
  #  nameserver 192.168.40.3
  #  nameserver 8.8.8.8
  #  options ndots:0
  #'';

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
